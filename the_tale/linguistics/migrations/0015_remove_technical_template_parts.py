# -*- coding: utf-8 -*-
from __future__ import unicode_literals

import re
import json

from django.db import models, migrations

RE_DAMAGE = re.compile(r'')

REMOVED_TEXT = [
    'Эффективность [duelist_1|рд] увеличилась на [effectiveness].',
    'Эффективность [duelist_1|рд] увеличивается на [effectiveness].',
    'Вы получаете [energy] энергии.',
    '[Hero] [восстанавливает|hero] [health] здоровья.',
    '[Companion] [восстанавливает|companion] [health] здоровья.',
    '[Hero|загл] [получает|hero] [experience] опыта.',
    '[Hero] [получил|hero] [experience] опыта.',
    '[Hero] [получает|hero] [experience] опыта.',
    '[companion|загл] [восстанавливает|companion] [health] здоровья.',
    '[Hero|им] [получает|hero] [experience] опыта.',
    '[Hero] [получает|hero] [experience] опыта.',
    '[Actor] [получает|actor] [damage] урона.',
    '[companion|загл] [восстанавливает|companion] [health] здоровья.',
    '[Companion] [восстанавливает|companion] [health] здоровья.',
    '[Получил|hero] [experience] опыта.',
    '[Attacker] [восстанавливает|attacker] [health] здоровья.',
    '[Defender] [получает|defender] [damage] урона.',
    '[Actor] [восстанавливает|actor] [health] здоровья.',
    '[Companion] [восстанавливает|companion] [health] здоровья.',
    'Вы запасаете [energy] энергии.',
    '[Hero] [восстанавливает|hero] [health] здоровья.',
    '[Companion] [восстанавливает|companion] [health] здоровья.',
    '[companion|загл] [восстанавливает|companion] [health] здоровья.',
    '[Hero|загл] [получает|hero] [experience] опыта.',
    '[hero] [получает|hero] [experience] опыта.',
    '[Hero] [получает|hero] [experience] опыта.',
    '[Получил|hero] [experience] опыта.',
    '[companion|загл] [восстановил|companion] [health] здоровья.',
    '[Companion] [восстанавливает|companion] [health] здоровья.',
    '[Companion_owner] [получает|companion_owner] [experience] опыта.',
    '[companion|загл] [восстанавливает|companion] [health] здоровья.',
    '[defender|загл] [получает|defender] [damage] урона.',
    '[hero|загл] [восстанавливает|hero] [health] здоровья.',
    '[companion_owner|загл|им] [получает|companion_owner] [experience] опыта.',

    'Рыцари получают 1 опыта.',
    'Героиня получает 5 опыта.',
    'Привидение получает 2 опыта.',
    'Герой получает 5 опыта.',
    'Эффективность героя увеличивается на 2.',
    'Эффективность рыцарей увеличивается на 1.',
    'Эффективность привидения увеличивается на 5.',
    'Эффективность героини увеличивается на 5.',
    'Эффективность героя увеличилась на 1.',
    'Эффективность рыцарей увеличилась на 2.',
    'Эффективность героини увеличилась на 5.',
    'Эффективность привидения увеличилась на 5.',
    'Вы получаете 1 энергии.',
    'Вы получаете 2 энергии.',
    'Вы получаете 5 энергии.',
    'Рыцари восстанавливают 1 здоровья.',
    'Герой восстанавливает 2 здоровья.',
    'Героиня восстанавливает 5 здоровья.',
    'Привидение восстанавливает 2 здоровья.',
    'Привидение восстанавливает 5 здоровья.',
    'Героиня восстанавливает 1 здоровья.',
    'Рыцари восстанавливают 25 здоровья.',
    'Герой восстанавливает 21 здоровья.',
    'Привидение восстанавливает 23 здоровья.',
    'Героиня восстанавливает 21 здоровья.',
    'Герой восстанавливает 25 здоровья.',
    'Рыцари восстанавливают 23 здоровья.',
    'Привидение восстанавливает 25 здоровья.',
    'Привидение восстанавливает 1 здоровья.',
    'Рыцари восстанавливают 5 здоровья.',
    'Героиня восстанавливает 2 здоровья.',
    'Герой восстанавливает 1 здоровья.',
    'Герой получает 1 опыта.',
    'Рыцари получают 5 опыта.',
    'Героиня получает 2 опыта.',
    'Героиня получает 1 урона.',
    'Привидение получает 5 урона.',
    'Рыцари получают 2 урона.',
    'Герой получает 2 урона.',
    'Герой получает 5 урона.',
    'Привидение получает 2 урона.',
    'Герой восстанавливает 5 здоровья.',
    'Рыцари восстанавливают 2 здоровья.',
    'Получили 1 опыта.',
    'Получило 5 опыта.',
    'Получил 2 опыта.',
    'Получила 1 опыта.',
    'Получило 2 опыта.',
    'Получили 5 опыта.',
    'Получило 1 опыта.',
    'Получила 2 опыта.',
    'Привидение получает 1 опыта.',
    'Рыцари получают 2 опыта.',
    'Получил 1 опыта.',
    'Получила 5 опыта.',
    'Герой получает 2 опыта.',
    'Героиня получает 1 опыта.',
    'Привидение получает 5 опыта.',
    'Получили 2 опыта.',
    'Получил 5 опыта.',
    'Чудовище получает 2 урона.',
    'Бойцы получают 1 урона.',
    'Героиня восстанавливает 25 здоровья.',
    'Призрак получает 5 урона.',
    'Рыцари восстанавливают 21 здоровья.',
    'Русалка получает 5 урона.',
    'Герой восстанавливает 23 здоровья.',
    'Чудовище получает 1 урона.',
    'Русалка получает 2 урона.',
    'Бойцы получают 2 урона.',
    'Жираф получает 2 урона.',
    'Слоны получают 1 урона.',
    'Зебра получает 5 урона.',
    'Чучело получает 5 урона.',
    'Призрак получает 2 урона.',
    'Бойцы получают 5 урона.',
    'Призрак получает 1 урона.',
    'Чудовище получает 5 урона.',
    'Свинья получает 1 урона.',
    'Пугало получает 2 урона.',
    'Гусь получает 5 урона.',
    'Волки получают 5 урона.',
    'Чудовище восстанавливает 5 здоровья.',
    'Русалка восстанавливает 2 здоровья.',
    'Бойцы восстанавливают 1 здоровья.',
    'Призрак восстанавливает 1 здоровья.',
    'Вы запасаете 1 энергии.',
    'Вы запасаете 5 энергии.',
    'Вы запасаете 2 энергии.',
    'Вы запасаете 5 энергии.',
    'Героиня восстановила 2 здоровья.',
    'Герой восстановил 5 здоровья.',
    'Привидение восстановило 1 здоровья.',
    'Рыцари восстановили 2 здоровья.',
    'Бойцы получают 1 опыта.',
    'Русалка получает 5 опыта.',
    'Чудовище получает 2 опыта.',
    'Призрак получает 1 опыта.',
    'Бойцы получают 25 опыта.',
    'Чудовище получает 21 опыта.',
    'Русалка получает 23 опыта.',
    'Призрак получает 23 опыта.',
    'Привидение получает 21 опыта.',
    'Рыцари получают 25 опыта.',
    'Героиня получает 23 опыта.',
    'Герой получает 23 опыта.',
    'Привидение получило 21 опыта.',
    'Рыцари получили 25 опыта.',
    'Героиня получила 23 опыта.',
    'Герой получил 23 опыта.'
    ]


def processor(text):
    for removed_text in REMOVED_TEXT:
        text = text.replace(removed_text, u'')

    return text.strip()


def remove_technical_template_parts(apps, schema_editor):
    from utg import templates as utg_templates
    from the_tale.linguistics.lexicon import keys as linguistics_keys

    Template = apps.get_model("linguistics", "Template")

    for template in Template.objects.iterator():
        data = json.loads(template.data)

        template.raw_template = processor(template.raw_template)

        key = linguistics_keys.LEXICON_KEY.index_value.get(template.key)

        if key is None:
            continue

        utg_template = utg_templates.Template()

        try:
            utg_template.parse(template.raw_template, externals=[v.value for v in key.variables])
        except:
            continue

        for verificator in data['verificators']:
            verificator['text'] = processor(verificator['text'])

        data['template'] = utg_template.serialize()

        template.data = json.dumps(data, ensure_ascii=False)
        template.save()


class Migration(migrations.Migration):

    dependencies = [
        ('linguistics', '0014_remove_companion_rarity_restriction'),
    ]

    operations = [
        migrations.RunPython(
            remove_technical_template_parts,
        ),
    ]
